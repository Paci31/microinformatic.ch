name: Deploy to Infomaniak (Node App via SSH key)

on:
  push:
    branches: [ main ]   # adapte si besoin

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      # === STAGING PROPRE ===
      - name: Create deploy staging
        run: |
          rm -rf deploy
          mkdir -p deploy
          cp -a dist deploy/dist
          cp package.json deploy/package.json
          if [ -f package-lock.json ]; then cp package-lock.json deploy/package-lock.json; fi
          if [ -f server.js ]; then cp server.js deploy/server.js; fi
          if [ -f .env.production ]; then cp .env.production deploy/.env; fi

      - name: Pack artifacts (stable)
        run: tar -C deploy -czf app.tar.gz .

      # === Connexion SSH sécurisée (clé privée) ===
      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.IK_SSH_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.IK_HOST }}" >> ~/.ssh/known_hosts

      - name: Upload package to server
        run: scp app.tar.gz ${{ secrets.IK_USER }}@${{ secrets.IK_HOST }}:~/app.tar.gz

      - name: Deploy on server
        run: |
          ssh ${{ secrets.IK_USER }}@${{ secrets.IK_HOST }} '
            set -e
            mkdir -p ~/app
            tar -xzf ~/app.tar.gz -C ~/app
            cd ~/app
            npm ci --omit=dev
            if command -v pm2 >/dev/null 2>&1; then
              pm2 restart microinformatic || pm2 start "npm -- start" --name microinformatic --update-env
            else
              pkill -f "node server.js" || true
              nohup npm start >/dev/null 2>&1 &
            fi
          '

